// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_httpsource

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func HttpsourceResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"auth_bearer_token": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The authentication bearer token value of the http source. Used for Bearer auth method",
				MarkdownDescription: "The authentication bearer token value of the http source. Used for Bearer auth method",
			},
			"auth_header_key": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The authentication header key of the http source. Used for HMAC and SharedSecret auth methods",
				MarkdownDescription: "The authentication header key of the http source. Used for HMAC and SharedSecret auth methods",
			},
			"auth_hmac_alg": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The authentication algorithm of the http source. Used for HMAC auth method",
				MarkdownDescription: "The authentication algorithm of the http source. Used for HMAC auth method",
			},
			"auth_method": schema.StringAttribute{
				Required:            true,
				Description:         "The authentication method of the http source",
				MarkdownDescription: "The authentication method of the http source",
				Validators: []validator.String{
					stringvalidator.OneOf(
						"SharedSecret",
						"HMAC",
						"Bearer",
						"Basic",
						"None",
					),
				},
			},
			"auth_password": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The authentication header password of the http source. Used for Basic auth method",
				MarkdownDescription: "The authentication header password of the http source. Used for Basic auth method",
			},
			"auth_secret_value": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The authentication header secret value of the http source. Used for HMAC and SharedSecret auth methods",
				MarkdownDescription: "The authentication header secret value of the http source. Used for HMAC and SharedSecret auth methods",
			},
			"auth_username": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The authentication header username of the http source. Used for Basic auth method",
				MarkdownDescription: "The authentication header username of the http source. Used for Basic auth method",
			},
			"id": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "ID of the http source to fetch",
				MarkdownDescription: "ID of the http source to fetch",
			},
			"integration_label": schema.StringAttribute{
				Required:            true,
				Description:         "The integration label (name)",
				MarkdownDescription: "The integration label (name)",
			},
			"log_stream_type": schema.StringAttribute{
				Required:            true,
				Description:         "The log stream type",
				MarkdownDescription: "The log stream type",
				Validators: []validator.String{
					stringvalidator.OneOf(
						"Auto",
						"CloudWatchLogs",
						"JSON",
						"JsonArray",
						"Lines",
					),
				},
			},
			"log_types": schema.ListAttribute{
				ElementType:         types.StringType,
				Required:            true,
				Description:         "The log types of the integration",
				MarkdownDescription: "The log types of the integration",
			},
		},
	}
}

type HttpsourceModel struct {
	AuthBearerToken  types.String `tfsdk:"auth_bearer_token"`
	AuthHeaderKey    types.String `tfsdk:"auth_header_key"`
	AuthHmacAlg      types.String `tfsdk:"auth_hmac_alg"`
	AuthMethod       types.String `tfsdk:"auth_method"`
	AuthPassword     types.String `tfsdk:"auth_password"`
	AuthSecretValue  types.String `tfsdk:"auth_secret_value"`
	AuthUsername     types.String `tfsdk:"auth_username"`
	Id               types.String `tfsdk:"id"`
	IntegrationLabel types.String `tfsdk:"integration_label"`
	LogStreamType    types.String `tfsdk:"log_stream_type"`
	LogTypes         types.List   `tfsdk:"log_types"`
}
